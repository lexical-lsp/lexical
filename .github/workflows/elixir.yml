name: Elixir CI

# Define workflow that runs when changes are pushed to the
# `main` branch or pushed to a PR branch that targets the `main`
# branch. Change the branch name if your project uses a
# different name for the main branch like "master" or "production".
on:
  push:
    branches: ["main", "releases/**", "feat/**", "fix/**"] # adapt branch for project
  pull_request:
    branches: ["main"] # adapt branch for project

# Sets the ENV `MIX_ENV` to `test` for running tests
env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      # Specify the OTP and Elixir versions to use when building
      # and running the workflow steps.
      matrix:
        otp: ["25.2.1"] # Define the OTP version [required]
        elixir: ["1.14.3-otp-25"] # Define the elixir version [required]
    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      # Step: Check out the code.
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Variables
        id: set_mix_lock_hash
        run: |
          mix_lock_hash="${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}"
          echo "mix_lock_hash=$mix_lock_hash" >> "$GITHUB_OUTPUT"

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build

          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Cache dialyzer plt files
        id: cache-plt
        uses: actions/cache@v3
        with:
          path: "priv/plts"
          key: ${{ matrix.otp }}-${{ matrix.elixir}}-plts-${{ steps.set_mix_lock_hash.outputs.mix_lock_hash }}

      # Step: Download project dependencies. If unchanged, uses
      # the cached version.
      - name: Install and compile dependencies
        run: |
          mix deps.get
          mix deps.compile --skip-umbrella-children

      # Step: Check that the checked in code has already been formatted.
      # This step fails if something was found unformatted.
      # Customize this step as desired.
      - name: Check Formatting
        run: mix format --check-formatted

      # Step: Run credo static code analysis
      - name: Credo static analysis
        run: mix credo

      - name: Compile
        run: make compile.all


      - name: Maybe create plt files
        if: steps.cache-plt.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: |
          mix compile.protocols
          make dialyzer.all

      # Step: Execute the tests.
      - name: Run tests
        run: make test.all
